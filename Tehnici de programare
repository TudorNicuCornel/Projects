Tema 1

Tehnica „Divide et Impera”

Enunț Problemă:

  Romeo și Julieta se află într-un labirint memorat ca o matrice în care culoarele sunt notate
cu 0, iar zidurile cu 1. Să se verifice dacă Romeo poate ajunge la Julieta, știind că el se poate
deplasa doar în sus, jos, stănga și dreapta.
Date de intrare: fișierul date.in conține
-pe prima linie doua numere naturale, m și n;
-pe a doua linie două numere naturale, LR și CR, reprezentând linia și coloana din labirint pe care
se află Romeo;
-pe a treia linie două numere naturale, LJ și CJ, reprezentând linia și coloana din labirint pe care
se află Julieta;
-pe următoarele m linii elementele unei matrice cu m linni și n coloane, cu semnificația din enunț;
Date de ieșire: fișierul date.out conține
-mesajul „DA”, dacă răspunsul este afirmativ, sau mesajul „NU” în caz contrat;
Liniile și coloanele matricei sunt numerotate începând cu 1.

Exemplu:
 ---------------------------------
 | date.in         |   date.out  |
 ---------------------------------
 | 6 7             | NU          |
 | 3 1             |             |
 | 5 5             |             |
 | 0 1 0 0 1 0 0   |             |
 | 0 1 0 0 1 0 0   |             |
 | „0” 0 1 1 1 0 0 |             |
 | 0 0 1 0 1 0 0   |             |
 | 0 1 0 1 „0” 1 0 |             |
 | 0 1 0 0 1 0 0   |             |
 ---------------------------------
 
 
 Tema 2
 
 Tehica „Backtracking”
 
 Enunt Problemă:
 
  Un labirint este codificat ca o matrice cu m linii și n coloane, în care se notează cu 0
 culoarele și cu -1 zidurile. Romeo se află în zona (l0,c0). Să se găsească toate posibilitățile sale
 de a ajunge la Julieta, aflată în zona (l1,c1).
 Date de intrare: fișierul date.in conține
 -pe prima linie numerele m și n, în această ordine cu semnificația din enunț;
 -pe următoarele M linii, matricea care memorează configurația labirintului;
 -pe ultima linie numerele naturale l0, c0, l1,c1, în această ordine, cu semnificația din enunț;
 Date de ieșire: fișierul date.out conține
 -soluțiile, separate prin câte o linie goală;
  O soluție este o matrice în care se codifică cu 0 culoarele prin care nu s-a trecut, 
 cu -1 zidurile și se marchează traseul cu numărul de ordine al pașilor urmati.
 Restricții și precizări:
 
 n, m ∈ [2,100]
 1 ≤ l0, l1 ≤ m
 1 ≤ c0 ,c1 ≤ n
 
 Tema 3 
 
 Tehnica „Greedy”
 
 Enunt Problemă:
 
 Se dau N intervale închise și se cere reuniunea acestora.
 Date de intrare:
 Fișierul date.in conține:
 -pe prima linie un număr natural N, cu semnificația din enunț;
 -pe următoarele N linii perechi de numere naturale de forma x y, unde unde x și y reprezintă 
 capetele unui interval închis [x,y].
 Date de ieșire:
 Fișierul date.out conține:
 -capetele intervalelor rezultate prin reuniune, câte o pereche pe rând; 
 -numerele de pe același rând sunt separate prin câte un spațiu
 Restricții și precizări:
 -N∈[2,102]
 Pentru fiecare interval  x,y∈[1,109], x<=y
 
 Exemplu:
---------------------
| date.in | date.out|
| 6       |         |
| 80 85   | 1 7     |
| 3 7     | 25 70   |
| 50 70   | 80 85   |
| 83 84   |         |
| 1 52    |         |
| 5 50    |         |
---------------------
 
 Tema 4 
 
 Tehnica „Programare dinamică”
 
 
 Enunț Problemă:
 
  Se consideră o clădire de formă dreptunghiulară formată din n*m camere,dispuse pe n linii
 și m coloane. Intrarea în clădire este în camera de coordonate (1,1), iar ieșirea în camera de
 coordonate (n,m). Din orice cameră (i,j) se poate ajunge numai în camerele (i+1,j) sau (i,j+1).
 Determinați în câte moduri se poate ajunge din camera (1,1) în camera (n,m).
  Deoarece numărul de posibilități poate fi mai mare, se cere doar restul acestui număr la 
 împărțirea cu 9901.
 

